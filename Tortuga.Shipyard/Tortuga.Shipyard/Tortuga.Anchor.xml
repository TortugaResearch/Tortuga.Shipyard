<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tortuga.Shipyard</name>
    </assembly>
    <members>
        <member name="T:Tortuga.Shipyard.Column">
            <summary>
            Represents a column in a database table, including its data type, constraints, and metadata.
            </summary>
        </member>
        <member name="M:Tortuga.Shipyard.Column.#ctor(System.String,System.Data.DbType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tortuga.Shipyard.Column" /> class with the specified column name, type, and nullability.
            </summary>
            <param name="columnName">The name of the column.</param>
            <param name="type">The general database type of the column.</param>
            <param name="isNullable">Indicates whether the column allows null values.</param>
        </member>
        <member name="M:Tortuga.Shipyard.Column.#ctor(System.String,System.Data.SqlDbType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tortuga.Shipyard.Column" /> class with the specified column name, SQL Server type, and nullability.
            </summary>
            <param name="columnName">The name of the column.</param>
            <param name="type">The SQL Server-specific type of the column.</param>
            <param name="isNullable">Indicates whether the column allows null values.</param>
        </member>
        <member name="M:Tortuga.Shipyard.Column.#ctor(System.String,System.Data.DbType,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tortuga.Shipyard.Column" /> class for types that require precision and scale.
            </summary>
            <param name="columnName">The name of the column.</param>
            <param name="type">The general database type of the column.</param>
            <param name="parameter1">The precision value.</param>
            <param name="parameter2">The scale value.</param>
            <param name="isNullable">Indicates whether the column allows null values.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">type - The data type '{type}' does not support a parameter.</exception>
        </member>
        <member name="M:Tortuga.Shipyard.Column.#ctor(System.String,System.Data.DbType,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tortuga.Shipyard.Column" /> class for types that require a single parameter (such as max length or precision).
            </summary>
            <param name="columnName">The name of the column.</param>
            <param name="type">The general database type of the column.</param>
            <param name="parameter1">The parameter value (max length or precision).</param>
            <param name="isNullable">Indicates whether the column allows null values.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">type - The data type '{type}' does not support a parameter.</exception>
        </member>
        <member name="M:Tortuga.Shipyard.Column.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tortuga.Shipyard.Column" /> class for SQL Server types that require a single parameter (such as max length or precision).
            </summary>
            <param name="columnName">The name of the column.</param>
            <param name="type">The SQL Server-specific type of the column.</param>
            <param name="parameter1">The parameter value (max length or precision).</param>
            <param name="isNullable">Indicates whether the column allows null values.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">type - The data type '{type}' does not support a parameter.</exception>
        </member>
        <member name="P:Tortuga.Shipyard.Column.Check">
            <summary>
            Gets or sets the check constraint expression for the column.
            </summary>
            <value>The check.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.CheckConstraintName">
            <summary>
            Gets or sets the name of the check constraint.
            </summary>
            <value>The name of the check constraint.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.ColumnName">
            <summary>
            Gets or sets the name of the column.
            </summary>
            <value>The name of the column.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.Default">
            <summary>
            Gets or sets the default value for the column.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.DefaultConstraintName">
            <summary>
            Gets or sets the name of the default value constraint.
            </summary>
            <value>The default name of the value constraint.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.Description">
            <summary>
            Gets or sets the description of the column.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.FKColumnName">
            <summary>
            Gets or sets the foreign key column.
            </summary>
            <value>The foreign key column.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.FKConstraintName">
            <summary>
            Gets or sets the name of the foreign key constraint.
            </summary>
            <value>The name of the foreign key constraint.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.FKSchemaName">
            <summary>
            Gets or sets the foreign key schema.
            </summary>
            <value>The foreign key schema.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.FKTableName">
            <summary>
            Gets or sets the foreign key table.
            </summary>
            <value>The foreign key table.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.IdentityIncrement">
            <summary>
            Gets or sets the identity increment value for identity columns.
            </summary>
            <value>The identity increment.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.IdentitySeed">
            <summary>
            Gets or sets the identity seed value for identity columns.
            </summary>
            <value>The identity seed.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.IsIdentity">
            <summary>
            Gets or sets a value indicating whether the column is an identity column.
            </summary>
            <value><c>true</c> if this instance is identity; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.IsNullable">
            <summary>
            Gets or sets a value indicating whether the column allows null values.
            </summary>
            <value><c>true</c> if this instance is nullable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.IsPrimaryKey">
            <summary>
            Gets or sets a value indicating whether the column is part of the primary key.
            </summary>
            <value><c>true</c> if this instance is primary key; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.IsSparse">
            <summary>
            Gets or sets a value indicating whether the column is marked as sparse (SQL Server feature).
            </summary>
            <value><c>true</c> if this instance is sparse; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.IsUnique">
            <summary>
            Gets or sets a value indicating whether the column has a unique constraint.
            </summary>
            <value><c>true</c> if this instance is unique; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.MaxLength">
            <summary>
            Gets or sets the maximum length for variable-length data types.
            </summary>
            <value>The maximum length.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.Precision">
            <summary>
            Gets or sets the precision for numeric data types.
            </summary>
            <value>The precision.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.Properties">
            <summary>
            Returns a collection of extended properties
            </summary>
        </member>
        <member name="P:Tortuga.Shipyard.Column.Scale">
            <summary>
            Gets or sets the scale for numeric data types.
            </summary>
            <value>The scale.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.SqlServerFullType">
            <summary>
            Gets the full SQL Server type of the column, including length, precision, and scale as appropriate.
            </summary>
            <value>The full type of the SQL server.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.SqlServerType">
            <summary>
            Gets or sets the SQL Server-specific type of the column.
            </summary>
            <value>The type of the SQL server.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.SqlServerTypeOverride">
            <summary>
            Gets or sets the type override. If not null, this overrides the type name calculated from DbType/SqlDbType.
            When using this, include any length, precision, or scale values as needed.
            </summary>
            <value>The SQL server type override.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.Type">
            <summary>
            Gets or sets the general database type of the column.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Column.UniqueConstraintName">
            <summary>
            Gets or sets the name of the unique constraint.
            </summary>
            <value>The name of the unique constraint.</value>
        </member>
        <member name="M:Tortuga.Shipyard.Column.AddProperty(System.String,System.String)">
            <summary>
            Adds an extended property.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Tortuga.Shipyard.ColumnCollection">
            <summary>
            Class ColumnCollection.
            </summary>
        </member>
        <member name="M:Tortuga.Shipyard.ColumnCollection.Add(Tortuga.Shipyard.Column)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>Column.</returns>
        </member>
        <member name="T:Tortuga.Shipyard.ExtendedProperty">
            <summary>
            Class ExtendedProperty.
            Implements the <see cref="T:Tortuga.Anchor.Modeling.ModelBase" />
            </summary>
            <seealso cref="T:Tortuga.Anchor.Modeling.ModelBase" />
        </member>
        <member name="M:Tortuga.Shipyard.ExtendedProperty.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tortuga.Shipyard.ExtendedProperty"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Tortuga.Shipyard.ExtendedProperty.#ctor">
            <summary>
            Creates a model using the default property bag implementation..
            </summary>
        </member>
        <member name="P:Tortuga.Shipyard.ExtendedProperty.Name">
            <summary>
            Gets or sets the name of the property.
            </summary>
        </member>
        <member name="P:Tortuga.Shipyard.ExtendedProperty.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Tortuga.Shipyard.ExtendedPropertyCollection">
            <summary>
            Class ExtendedPropertyCollection.
            </summary>
        </member>
        <member name="T:Tortuga.Shipyard.Generator">
            <summary>
            Class Generator.
            Implements the <see cref="T:Tortuga.Anchor.Modeling.ModelBase" />
            </summary>
            <seealso cref="T:Tortuga.Anchor.Modeling.ModelBase" />
        </member>
        <member name="P:Tortuga.Shipyard.Generator.EscapeAllIdentifiers">
            <summary>
            Gets or sets a value indicating whether [escape all identifiers].
            </summary>
            <value><c>true</c> if [escape all identifiers]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Generator.Keywords">
            <summary>
            Gets the keywords.
            </summary>
            <value>The keywords.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Generator.TabSize">
            <summary>
            Gets or sets the number of spaced to use per logical tab. If null, an actual tab will be used.
            </summary>
            <value>The size of the tab.</value>
        </member>
        <member name="M:Tortuga.Shipyard.Generator.BuildTable(Tortuga.Shipyard.Table)">
            <summary>
            Builds the table.
            </summary>
            <param name="table">The table.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Tortuga.Shipyard.Generator.EscapeText(System.String)">
            <summary>
            Escapes text for use as a string in SQL.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Tortuga.Shipyard.Generator.EscapeTextUnicode(System.String)">
            <summary>
            Escapes text for use as a string in SQL.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Tortuga.Shipyard.Generator.NameConstraints(Tortuga.Shipyard.Table)">
            <summary>
            Names the constraints.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:Tortuga.Shipyard.Generator.ValidateTable(Tortuga.Shipyard.Table)">
            <summary>
            Validates the table.
            </summary>
            <param name="table">The table.</param>
            <returns>List&lt;ValidationResult&gt;.</returns>
        </member>
        <member name="T:Tortuga.Shipyard.Index">
            <summary>
            Class Index.
            Implements the <see cref="T:Tortuga.Anchor.Modeling.ModelBase" />
            </summary>
            <seealso cref="T:Tortuga.Anchor.Modeling.ModelBase" />
        </member>
        <member name="P:Tortuga.Shipyard.Index.IncludedColumns">
            <summary>
            Gets the included columns.
            </summary>
            <value>The included columns.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Index.IndexName">
            <summary>
            Gets or sets the name of the index.
            </summary>
            <value>The name of the index.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Index.IsConstraint">
            <summary>
            Gets or sets a value indicating whether the index is a constraint.
            </summary>
        </member>
        <member name="P:Tortuga.Shipyard.Index.IsUnique">
            <summary>
            Gets or sets a value indicating whether the index is unique.
            </summary>
        </member>
        <member name="P:Tortuga.Shipyard.Index.OrderedColumns">
            <summary>
            Gets the ordered columns.
            </summary>
            <value>The ordered columns.</value>
        </member>
        <member name="T:Tortuga.Shipyard.IndexCollection">
            <summary>
            Class IndexCollection.
            </summary>
        </member>
        <member name="T:Tortuga.Shipyard.SqlServerGenerator">
            <summary>
            Class SqlServerGenerator.
            Implements the <see cref="T:Tortuga.Shipyard.Generator" />
            </summary>
            <seealso cref="T:Tortuga.Shipyard.Generator" />
        </member>
        <member name="M:Tortuga.Shipyard.SqlServerGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tortuga.Shipyard.SqlServerGenerator"/> class.
            </summary>
        </member>
        <member name="F:Tortuga.Shipyard.SqlServerGenerator.s_KeyWords">
            <summary>
            The s key words
            </summary>
        </member>
        <member name="M:Tortuga.Shipyard.SqlServerGenerator.EscapeIdentifier(System.String)">
            <summary>
            Escapes the identifier.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns>System.Nullable&lt;System.String&gt;.</returns>
        </member>
        <member name="P:Tortuga.Shipyard.SqlServerGenerator.UseBatchSeperator">
            <summary>
            Gets or sets a value indicating whether batch seperator should be used between statements.
            </summary>
        </member>
        <member name="P:Tortuga.Shipyard.SqlServerGenerator.IncludeSchemaNameInConstraintNames">
            <summary>
            Gets or sets a value indicating whether to include schema name when generating a constraint name.
            </summary>
        </member>
        <member name="M:Tortuga.Shipyard.SqlServerGenerator.NameConstraints(Tortuga.Shipyard.Table)">
            <summary>
            Names the constraints.
            </summary>
            <param name="table">The table.</param>
            <exception cref="T:System.ArgumentNullException">table</exception>
        </member>
        <member name="M:Tortuga.Shipyard.SqlServerGenerator.BuildTable(Tortuga.Shipyard.Table)">
            <summary>
            Builds the table.
            </summary>
            <param name="table">The table.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.ArgumentNullException">table</exception>
        </member>
        <member name="M:Tortuga.Shipyard.SqlServerGenerator.ValidateTable(Tortuga.Shipyard.Table)">
            <summary>
            Validates the table.
            </summary>
            <param name="table">The table.</param>
            <returns>List&lt;ValidationResult&gt;.</returns>
            <exception cref="T:System.ArgumentNullException">table</exception>
        </member>
        <member name="T:Tortuga.Shipyard.Table">
            <summary>
            Represents a database table, including its schema, columns, indexes, and primary key information.
            </summary>
        </member>
        <member name="M:Tortuga.Shipyard.Table.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tortuga.Shipyard.Table" /> class with the specified schema and table name.
            </summary>
            <param name="schemaName">The schema name.</param>
            <param name="tableName">The table name.</param>
        </member>
        <member name="P:Tortuga.Shipyard.Table.ClusteredIndex">
            <summary>
            Gets or sets the clustered index.
            </summary>
        </member>
        <member name="P:Tortuga.Shipyard.Table.Columns">
            <summary>
            Gets the collection of columns in the table.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Table.Description">
            <summary>
            Gets or sets the description of the table.
            </summary>
        </member>
        <member name="P:Tortuga.Shipyard.Table.HasCompoundPrimaryKey">
            <summary>
            Gets a value indicating whether the table has a compound (multi-column) primary key.
            </summary>
            <value><c>true</c> if this instance has compound primary key; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Table.Indexes">
            <summary>
            Gets the collection of indexes defined on the table.
            </summary>
            <value>The indexes.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Table.PrimaryKeyConstraintName">
            <summary>
            Gets or sets the name of the primary key constraint.
            </summary>
            <value>The name of the primary key constraint.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Table.SchemaName">
            <summary>
            Gets or sets the schema name of the table.
            </summary>
            <value>The name of the schema.</value>
        </member>
        <member name="P:Tortuga.Shipyard.Table.TableName">
            <summary>
            Gets or sets the table name.
            </summary>
            <value>The name of the table.</value>
        </member>
        <member name="T:Tortuga.Shipyard.TableCollection">
            <summary>
            Represents a collection of <see cref="T:Tortuga.Shipyard.Table" /> objects.
            </summary>
        </member>
    </members>
</doc>
